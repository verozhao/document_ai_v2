# Monitor import operation and start training when complete
main:
  params: [input]
  steps:
    - init:
        assign:
          - project_id: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
          - processor_id: ${input.processor_id}
          - location: ${input.location}
          - import_operation: ${input.import_operation}

    - log_monitoring_start:
        call: sys.log
        args:
          text: '${"Monitoring import operation: " + import_operation}'
          severity: "INFO"

    # Monitor import operation to completion
    - monitor_import:
        steps:
          - wait_for_import:
              call: sys.sleep
              args:
                seconds: 30

          - check_import_status:
              call: http.get
              args:
                url: '${"https://" + location + "-documentai.googleapis.com/v1beta3/" + import_operation}'
                auth:
                  type: OAuth2
              result: import_status

          - log_import_progress:
              call: sys.log
              args:
                text: '${"Import metadata: " + json.encode_to_string(import_status.body.metadata)}'
                severity: "INFO"

          # Check if import is complete using metadata field
          - check_import_completion:
              switch:
                - condition: ${import_status.body.metadata.commonMetadata.state == "FAILED"}
                  steps:
                    - log_import_failure:
                        call: sys.log
                        args:
                          text: '${"Import FAILED: " + json.encode_to_string(import_status.body.metadata)}'
                          severity: "ERROR"
                    - return_import_failure:
                        return:
                          status: "IMPORT_FAILED"
                          import_operation: ${import_operation}
                          metadata: ${import_status.body.metadata}
                          message: "Import operation failed"
                - condition: ${import_status.body.metadata.commonMetadata.state == "SUCCEEDED"}
                  steps:
                    - log_import_success:
                        call: sys.log
                        args:
                          text: "Import completed successfully! Starting training..."
                          severity: "INFO"

                    # Start training after successful import
                    - start_training_after_import:
                        call: http.post
                        args:
                          url: '${"https://" + location + "-documentai.googleapis.com/v1/projects/" + project_id + "/locations/" + location + "/processors/" + processor_id + "/processorVersions:train"}'
                          auth:
                            type: OAuth2
                          body:
                            processorVersion:
                              displayName: '${"auto-train-" + text.substring(sys.now(), 0, 10)}'
                        result: training_response

                    - log_training_started:
                        call: sys.log
                        args:
                          text: '${"Training started: " + training_response.body.name}'
                          severity: "INFO"

                    - return_training_started:
                        return:
                          status: "SUCCESS"
                          import_operation: ${import_operation}
                          training_operation: ${training_response.body.name}
                          message: "Import successful, training started!"

          - continue_import_monitoring:
              next: monitor_import